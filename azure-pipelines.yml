# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', '') ]

trigger:
- release
- qa-release

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)'
    customCommand: 'install -g @angular/cli'
  displayName: 'Install Angular Cli'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)'
    customCommand: 'install --force'
  displayName: 'npm Install'

- task: CmdLine@2
  inputs:
    script: 'npm run build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "ng Build"
  condition:  eq(variables['branchName'], 'release')

- task: CmdLine@2
  inputs:
    script: 'npm run build:qa'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "ng Build"
  condition:  eq(variables['branchName'], 'qa-release')

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/daleel-system/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/daleel-system.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: Publish Build Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/daleel-system.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'